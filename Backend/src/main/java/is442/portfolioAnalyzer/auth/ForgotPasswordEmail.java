package is442.portfolioAnalyzer.auth;

import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;

public class ForgotPasswordEmail {
  /**
   * Outgoing Mail (SMTP) Server
   * requires TLS or SSL: smtp.gmail.com (use authentication)
   * Use Authentication: Yes
   * Port for TLS/STARTTLS: 587
   * 
   * @param toEmail
   */

  /*
   * Process:
   * - User click on "Forgot Password" link
   * - Random authToken is generated by backend (random hashvalue that can be
   * checked)
   * - Endpoint with authToken link is sent to their email address
   * - User clicks on link (e.g. localhost:3000/forgotPassword?token=123)
   * - Backend checks if authToken is valid. If it is, bring user to new page to
   * key in old password, new password and confirm password
   * - DB updates user's password with new password
   * - User can now use this random generated password to login
   * 
   * 
   * TODO:
   * - Endpoint for sending forgot password email address
   * - Random ASCII character generation to get resetted password
   * - More to be added soon...
   */

  public static void forgotPassword(String toEmail) {
    final String fromEmail = "douglastoh99@gmail.com";
    final String password = "eodfvguifpoxzkqu";

    System.out.println("forgotPassword Start");
    Properties props = new Properties();
    props.put("mail.smtp.host", "smtp.gmail.com"); // SMTP Host
    props.put("mail.smtp.port", "587"); // TLS Port
    props.put("mail.smtp.auth", "true"); // enable authentication
    props.put("mail.smtp.starttls.enable", "true"); // enable STARTTLS

    // create Authenticator object to pass in Session.getInstance argument
    Authenticator auth = new Authenticator() {
      // override the getPasswordAuthentication method
      protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(fromEmail, password);
      }
    };
    Session session = Session.getInstance(props, auth);

    EmailUtil.sendEmail(session, fromEmail, toEmail, "TLSEmail Testing Subject", "TLSEmail Testing Body");
  }
}
